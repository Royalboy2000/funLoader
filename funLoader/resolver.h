#pragma once

#include <Windows.h>
#include <winternl.h>

#define CRC32_KERNEL32_DLL 0x68de31d
#define CRC32_NTDLL_DLL 0x1edab0ed

// Function pointer types
typedef HMODULE(WINAPI* LOADLIBRARYA)(LPCSTR);
typedef FARPROC(WINAPI* GETPROCADDRESS)(HMODULE, LPCSTR);
typedef BOOL(WINAPI* CREATEPROCESSW)(LPCWSTR, LPWSTR, LPSECURITY_ATTRIBUTES, LPSECURITY_ATTRIBUTES, BOOL, DWORD, LPVOID, LPCWSTR, LPSTARTUPINFOW, LPPROCESS_INFORMATION);
typedef HANDLE(WINAPI* OPENPROCESS)(DWORD, BOOL, DWORD);
typedef NTSTATUS(NTAPI* NTALLOCATEVIRTUALMEMORY)(HANDLE, PVOID*, ULONG_PTR, PSIZE_T, ULONG, ULONG);
typedef NTSTATUS(NTAPI* NTWRITEVIRTUALMEMORY)(HANDLE, PVOID, PVOID, SIZE_T, PSIZE_T);
typedef NTSTATUS(NTAPI* NTCREATETHREADEX)(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES, HANDLE, PVOID, PVOID, ULONG, ULONG_PTR, SIZE_T, SIZE_T, PVOID);
typedef NTSTATUS(NTAPI* NTCLOSE)(HANDLE);
typedef BOOL(WINAPI* GLOBALMEMORYSTATUSEX)(LPMEMORYSTATUSEX);
typedef HANDLE(WINAPI* CREATEFILEW)(LPCWSTR, DWORD, DWORD, LPSECURITY_ATTRIBUTES, DWORD, DWORD, HANDLE);
typedef BOOL(WINAPI* DEVICEIOCONTROL)(HANDLE, DWORD, LPVOID, DWORD, LPVOID, DWORD, LPDWORD, LPOVERLAPPED);


// Function to resolve APIs by hash
void ResolveAPIs(LOADLIBRARYA pLoadLibraryA, GETPROCADDRESS pGetProcAddress, PAPI_FUNCTIONS pApiFunctions);

// Hashing function
uint32_t crc32(const char* str);
